'use server';
import axios from "axios";

const telegramBotToken = process.env.TELEGRAM_BOT_TOKEN;
const chatId = process.env.TELEGRAM_CHAT_ID;
const BASE_URL = `https://api.telegram.org/bot${telegramBotToken}/sendMessage`;

export interface CalculatorFormData {
    material: string;
    color: string;
    size: string;
    printColor: string;
    quantity: number;
    price: number;
    pricePerBag: number;
    user_name: string;
    user_phone: string;
    comment?: string;
}

export async function sendCalculatorDetails(data: CalculatorFormData): Promise<any> {
    const {
        material,
        color,
        size,
        printColor,
        quantity,
        price,
        pricePerBag,
        user_name,
        user_phone,
        comment = '–ù–µ—Ç'
    } = data;

    const message = `üì¶ *–ù–æ–≤—ã–π —Ä–∞—Å—á–µ—Ç —É–ø–∞–∫–æ–≤–∫–∏*\n\n` +
        `*–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞:*\n` +
        `üõçÔ∏è –ú–∞—Ç–µ—Ä–∏–∞–ª: ${material}\n` +
        `üé® –¶–≤–µ—Ç: ${color}\n` +
        `üìè –†–∞–∑–º–µ—Ä: ${size}\n` +
        `üé® –¶–≤–µ—Ç –ø–µ—á–∞—Ç–∏: ${printColor}\n` +
        `üî¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${quantity} —à—Ç.\n\n` +
        `*–°—Ç–æ–∏–º–æ—Å—Ç—å:*\n` +
        `üí∞ –¶–µ–Ω–∞ –∑–∞ —à—Ç—É–∫—É: ${pricePerBag.toFixed(2)} Br\n` +
        `üíµ –ò—Ç–æ–≥–æ: ${price.toFixed(2)} Br\n\n` +
        `*–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:*\n` +
        `üë§ –ò–º—è: ${user_name}\n` +
        `üì± –¢–µ–ª–µ—Ñ–æ–Ω: ${user_phone}\n` +
        `üí≠ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${comment}`;

    try {
        const response = await axios.post(BASE_URL, {
            chat_id: chatId,
            text: message,
            parse_mode: 'Markdown'
        });

        console.log('Calculator details sent to Telegram:', response.data);
        return response.data;
    } catch (error) {
        console.error('Error sending calculator details to Telegram:', error);
        throw error;
    }
}